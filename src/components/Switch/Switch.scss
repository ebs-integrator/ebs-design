@mixin switchSize($width) {
  $height: $width - 12px;
  $thumbSize: $height - 4px;

  width: rem($width);
  height: rem($height);

  &::before {
    height: rem($thumbSize);
    width: rem($thumbSize);
  }
}

.ebs-switch {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;

  font-family: $font-family;
  font-weight: $font-weight-base;
  color: $text-color;

  // States
  &[data-disabled] {
    color: $grey-500;
  }

  &[data-loading],
  &[data-disabled] {
    pointer-events: none;
  }

  // Sizes
  &--medium,
  &--large {
    font-size: $font-size-base;
    line-height: rem(24px);
  }

  &--small {
    font-size: rem(12px);
    line-height: rem(16px);
  }

  &__input {
    position: absolute;
    height: 0;
    width: 0;
    margin: 0;
    padding: 0;
  }

  &__slider {
    position: relative;
    transition: $transition-time;
    border-radius: 999px;
    border-width: 2px;
    border-style: solid;
    margin-right: rem(8px);

    // Slider sizes
    &--medium {
      @include switchSize(28px);
    }

    &--large {
      @include switchSize(32px);
    }

    &--small {
      @include switchSize(24px);
    }

    // Thumb
    &::before {
      content: '';
      position: absolute;
      border-radius: 50%;
      background-color: $white;
      transition: $transition-time;
    }

    &[data-checked='false'] {
      background-color: $grey-400;
      border-color: $grey-400;

      &[data-hovered] {
        background-color: $grey-500;
        border-color: $grey-500;
      }

      &[data-active] {
        background-color: $grey-600;
        border-color: $grey-600;
      }
    }

    &[data-checked='true'] {
      background-color: var(--primary-color);
      border-color: var(--primary-color);

      &[data-hovered] {
        background-color: var(--primary-600);
        border-color: var(--primary-600);
      }

      &[data-active] {
        background-color: var(--primary-700);
        border-color: var(--primary-700);
      }

      &::before {
        transform: translateX(rem(12px));
      }
    }

    &[data-focused] {
      box-shadow: 0 0 0 rem(4px) var(--primary-100);
    }

    &[data-invalid] {
      border-color: $danger-500;

      &[data-hovered] {
        border-color: $danger-500;
      }
    }

    &[data-loading]:not(&[data-disabled]) {
      background-color: $grey-300;
      border-color: $grey-300;

      &::before {
        display: none;
      }
    }

    &[data-disabled] {
      background-color: $grey-200;
      border-color: $grey-200;
    }
  }

  // TODO: Fix !important and such nested styling after fixing Loader component
  &__loader {
    height: 100%;
    min-height: unset !important;
    width: 100% !important;

    display: flex;
    align-items: center;
    justify-content: center;

    > .ebs-loader__spinner {
      width: rem(8px);
      height: rem(8px);
      border: 1px solid $grey-600;
      border-top: 1px solid $grey-400;
      top: unset;
    }
  }
}
