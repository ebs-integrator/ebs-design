@mixin checkSize($font-size, $line-height, $dot-size, $bg-size, $radius: 4px) {
  font-size: rem($font-size);
  line-height: rem($line-height);

  &:before {
    width: rem($dot-size);
    height: rem($dot-size);
    top: calc(($line-height - $dot-size) / 2);
    background-size: $bg-size;
    border-radius: rem($radius);
  }
}

.ebs-checkbox {
  font-family: $font-family;
  font-weight: $font-size-base;
  color: $text-color;

  &__input {
    position: absolute;
    height: 0;
    width: 0;
    margin: 0;
    padding: 0;
  }

  &__label {
    display: inline-flex;
    align-items: flex-start;
    user-select: none;
    cursor: pointer;
    position: relative;
    width: 100%;

    // Sizes
    &--medium {
      @include checkSize($font-size-base, 24px, $option-dot-size, 8px);
    }

    &--large {
      @include checkSize($font-size-base, 24px, $option-dot-size-lg, 12px);
    }

    &--small {
      @include checkSize(12px, 16px, $option-dot-size-sm, 6px, 2px);
    }

    // Radio placements
    &--check-align {
      &-left::before {
        margin-right: rem($option-spacing);
      }

      &-right {
        flex-direction: row-reverse;
        justify-content: space-between;

        &::before {
          margin-left: rem($option-spacing);
        }
      }
    }

    // Checkmark
    &::before {
      content: '';
      display: inline-block;
      position: relative;
      flex-shrink: 0;
      border-width: 1px;
      border-color: $grey-400;
      border-style: solid;
      background-color: $white;
      background-repeat: no-repeat;
      background-position: center;
      transition: $transition-time;
    }

    &[data-checked='false'] {
      &:hover::before {
        border-color: $grey-500;
        background-color: $grey-100;
      }

      &:active::before {
        border-color: $grey-600;
        background-color: $grey-200;
        transform: scale(0.8);
      }

      &[data-error] {
        &:hover,
        &:active {
          &::before {
            border-color: $danger-500;
          }
        }
      }
    }

    &[data-indeterminate] {
      &::before {
        background-image: $indeterminate-check-image;
      }
    }

    &[data-checked='true'] {
      &::before {
        background-image: $check-image;
      }
    }

    &[data-checked='true'],
    &[data-indeterminate] {
      &::before {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        box-shadow: none;
      }

      &:hover::before {
        background-color: var(--primary-600);
        border-color: var(--primary-600);
      }

      &:active::before {
        background-color: var(--primary-700);
        border-color: var(--primary-700);
      }

      &[data-error] {
        pointer-events: none;

        &::before {
          border-color: $danger-500;
        }
      }
    }

    &[data-focused]::before {
      box-shadow: 0 0 0 4px var(--primary-100);
    }

    &[data-error]:not([data-disabled])::before {
      box-shadow: 0 0 0 1px $danger-500;
      border-color: $danger-500;
    }

    &[data-disabled] {
      pointer-events: none;
      color: $grey-500;

      &::before {
        border-color: $grey-500;
        background-color: $grey-100;
      }

      &[data-checked='true'] {
        &::before {
          background-color: $grey-500;
          border-color: $grey-500;
        }
      }
    }
  }
}
