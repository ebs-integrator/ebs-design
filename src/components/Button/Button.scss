.ebs-button {
  display: inline-flex;
  appearance: none;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  position: relative;
  user-select: none;
  white-space: nowrap;
  outline: none;
  cursor: pointer;
  border: 1px solid transparent;
  background-color: transparent;

  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  font-size: rem($btn-font-size);
  line-height: $btn-line-height;
  transition: $transition-base;

  &[data-has-icon='true'] {
    padding: 0;
  }

  &:disabled,
  &[data-is-loading='true'] {
    pointer-events: none;
  }

  &:focus {
    box-shadow: $primary-100 0px 0px 0px 3px;
    z-index: 1;
  }

  // Sizes
  &--medium {
    padding: 0 rem($btn-padding-x);
    height: rem($base-size);
    border-radius: rem($btn-border-radius);

    &[data-has-icon='true'] {
      width: rem($base-size);
    }
  }

  &--large {
    padding: 0 rem($btn-padding-x-lg);
    height: rem($base-size-lg);
    border-radius: rem($btn-border-radius-lg);

    &[data-has-icon='true'] {
      width: rem($base-size-lg);
    }
  }

  &--small {
    padding: 0 rem($btn-padding-x-sm);
    height: rem($base-size-sm);
    border-radius: rem($btn-border-radius-sm);

    &[data-has-icon='true'] {
      width: rem($base-size-sm);
    }
  }

  // Variants
  &--primary {
    color: $white;
    background-color: var(--primary-color);
    border-color: var(--primary-color);

    &:hover {
      background-color: var(--primary-600);
      border-color: var(--primary-600);
    }

    &:active {
      background-color: var(--primary-700);
      border-color: var(--primary-700);
    }

    &:disabled {
      border-color: var(--primary-300);
      background-color: var(--primary-300);
    }
  }

  &--text {
    color: var(--primary-color);
    background-color: transparent;
    border-color: transparent;

    &:hover {
      color: var(--primary-600);
    }

    &:active {
      color: var(--primary-700);
    }

    &:disabled {
      color: var(--primary-300);
    }
  }

  &--fill {
    color: var(--primary-color);
    background-color: var(--primary-200);
    border-color: var(--primary-200);

    &:hover {
      color: $white;
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }

    &:active {
      color: $white;
      background-color: var(--primary-600);
      border-color: var(--primary-600);
    }

    &:disabled {
      color: var(--primary-300);
      background-color: var(--primary-100);
      border-color: var(--primary-100);
    }
  }

  &--ghost {
    color: var(--primary-color);
    background-color: transparent;
    border-color: var(--primary-color);

    &:hover {
      color: $white;
      background-color: var(--primary-color);
    }

    &:active {
      color: $white;
      border-color: var(--primary-700);
      background-color: var(--primary-700);
    }

    &:disabled {
      color: var(--primary-200);
      background-color: transparent;
      border-color: var(--primary-200);
    }
  }

  &--dark {
    color: $white;
    background-color: $grey-800;
    border-color: $grey-800;

    &:hover {
      background-color: $grey-900;
      border-color: $grey-900;
    }

    &:active {
      background-color: $black;
      border-color: $black;
    }

    &:focus {
      box-shadow: $grey-400 0px 0px 0px 3px;
    }

    &:disabled {
      color: $grey-200;
      background-color: $grey-500;
      border-color: $grey-500;
    }
  }

  &--light {
    color: $black;
    background-color: $white;

    &:hover {
      background-color: $grey-100;
    }

    &:active {
      background-color: $grey-200;
    }

    &:focus {
      box-shadow: $grey-100 0px 0px 0px 3px;
    }

    &:disabled {
      color: $grey-400;
    }
  }

  // TODO: Remove !important after fixing Loader component (with color and emptyColor as props)
  // Loader
  &__loader {
    top: unset;

    &--primary {
      border-color: var(--primary-300) !important;
      border-top-color: $white !important;
    }

    &--text {
      border-color: $grey-300 !important;
      border-top-color: var(--primary-color) !important;
    }

    &--fill,
    &--ghost {
      border-color: var(--primary-300) !important;
      border-top-color: var(--primary-color) !important;
    }

    &--light {
      border-color: $grey-300 !important;
      border-top-color: $grey-600 !important;
    }

    &--dark {
      border-color: $grey-600 !important;
      border-top-color: $white !important;
    }

    &--absolute {
      position: absolute;
    }
  }

  // Prefix
  &__prefix {
    display: flex;
    align-items: center;
    margin-right: rem(8px);
  }

  // Children when button with no icon is loading
  &__children-transparent {
    opacity: 0;
  }

  // Additional styling props
  &--full {
    width: 100%;
  }

  &--rounded {
    border-radius: $border-radius-pill;
  }

  // Button Group
  &__group {
    display: flex;
    flex-wrap: nowrap;

    .ebs-button {
      @include text-ellipsis;
    }

    .ebs-button__wrapper:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .ebs-button__wrapper:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    .ebs-button__wrapper:not(:last-child) {
      border-right: none;
    }

    .ebs-button__wrapper:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}
